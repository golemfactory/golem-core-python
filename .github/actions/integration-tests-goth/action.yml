name: Integration tests on goth
description: Setup goth environment nad run integration tests

inputs:
  GITHUB_TOKEN:
    description: "GitHub token"
    required: true
  PYTHON_VERSION:
    description: "python version"
    default: "3.10"

runs:
  using: "composite"
  steps:
    - name: Install python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.PYTHON_VERSION }}
    - name: Install and configure Poetry
      shell: bash
      run: python -m pip install -U pip setuptools poetry==1.5.1

    - name: Install dependencies
      shell: bash
      run: |
        poetry env use python${{ inputs.PYTHON_VERSION }}
        poetry install

    - name: Disconnect Docker containers from default network
      shell: bash
      continue-on-error: true
      # related to this issue: https://github.com/moby/moby/issues/23302
      run: |
        docker network inspect docker_default
        sudo apt-get install -y jq
        docker network inspect docker_default | jq ".[0].Containers | map(.Name)[]" | tee /dev/stderr | xargs --max-args 1 -- docker network disconnect -f docker_default

    - name: Remove Docker containers
      shell: bash
      continue-on-error: true
      run: docker rm --force $(docker ps -a -q)

    - name: Restart Docker daemon
      shell: bash
      # related to this issue: https://github.com/moby/moby/issues/23302
      run: sudo systemctl restart docker

    - name: Log in to GitHub Docker repository
      shell: bash
      run: echo ${{ inputs.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{github.actor}} --password-stdin

    - name: Setup goth golem network
      shell: bash
      env:
        GITHUB_API_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      run: poetry run ./tests/integration/run-goth.sh

    - name: Run tests
      shell: bash
      run: poetry run ./tests/integration/run-tests.sh

    - name: Remove Docker containers
      shell: bash
      if: always()
      continue-on-error: true
      run: docker rm --force $(docker ps -a -q)

    - name: Stop goth network
      shell: bash
      if: always()
      continue-on-error: true
      run: kill $(ps -aux | grep "[g]oth start" | awk '{print $2}')
